author: Vitezslav Kriz (xkrizv03)
author: Martin Kocich (xkocic02)
name: Simplified app description

@startuml

class App{
	x: -444
	y: -420
	- QApplication app
	- MainWindow mainWin
	+ int start()
	in composition with MainWindow
	in assoc with Semantics
	in assoc with Service
}

class MainWindow{
	x: -756
	y: -564
	in comp with MainTextEdit
	in comp with DebugTextEdit
	# bool eventFilter()
	# void closeEvent()
	- bool save()
	- bool saveAs()
	- void about()
	- void init()
	- void createActions()
	- void createStatusBar()
	- void readSettings()
	- void writeSettings()
	- bool maybeSave()
	- void loadFile()
	- bool saveFile()
	- void setCurrentFile()
	- QString strippedName()
	- MainTextEdit* mainTextEdit
	- DebugTextEdit* debugTextEdit
	- ERDView* erdView
	- SEQView* seqView
	- QString curFile
	- bool isUntitled
}

class MainTextEdit{
	x: -996
	y: -372
	in comp with Highlighter
	+ void syntax_reload()
	- Highlighter* highlighter
}

class DebugTextEdit{
	x: -948
	y: -528

}

class Semantics{
	x: -96
	y: -396
	in agg with Sequence
	in agg with UMLClass
	in generalization with Service
	+ void buildSTree()
	+ std::vector<UMLClass> getClasses()
	+ std::vector<Sequence> getSequences()
	+ void removeClasses()
	+ void removeSequences()
	+ void setERDView()
	+ void setSEQView()
	# ERDView* erd
	# SEQView* seq
	# std::vector<UMLClass> classes
	# std::vector<Sequence> sequences
	# GlobalStack stack
	# void addClass()
	# bool skipTreeUntilLastIs()
	# bool skipTreeUntilWhileTrue()
	# void testDuplicates()
	# void testRelations()
	# void addInheritedProperties()
	# void printStack()
	# void testProperties()
}

class Sequence{
	x: 312
	y: -516
	in agg with SEQMember
	in agg with SEQAction
	+ void buildSTree()
	+ bool activateMember()
	+ bool deactivateMember()
	+ void addAction()
	+ std::vector<SEQMember> getMembers()
	+ std::vector<SEQAction> getActions()
	+ QString getName()
	+ void connectActions()
	+ void setEndIndexes()
	+ void testEntities()
	+ void disableLeftovers()
	+ void testActions()
	# SEQMember* getMemberByName()
	# int getMemberIndexByName()
	# size_t line
	# QString name
	# std::vector<SEQMember> members
	# std::vector<SEQAction> actions
}

class SEQMember{
	x: 780
	y: -816
	in agg with SEQActivation
	+ QString getName()
	+ bool isInterface()
	+ bool getErrorFlag()
	+ void setErrorFlag()
	+ std::vector<SEQActivation> getActivations()
	+ bool getActivatedFlag()
	+ void setActivatedFlag()
	+ size_t getLine()
	+ void addActivation()
	+ void setClassID()
	+ size_t getClassID()
	+ void setClassLine()
	+ size_t getClassLine()
	+ void setDeactivationTime()
	+ bool wasActiveAtTime()
	+ void setInterfaceFlag()
	# QString name
	# bool has_error
	# bool is_interface
	# std::vector<SEQActivation> activations
	# size_t class_id
	# size_t class_line
	# bool is_activated
	# size_t first_line
}

class SEQActivation{
	x: 1152
	y: -828
	+ size_t startIndex()
	+ size_t endIndex()
	+ void setEndIndex()
	# size_t start
	# size_t startLine
	# size_t end
}

class SEQAction{
	x: 804
	y: -300
	+ QString getMethod()
	+ RuleID getType()
	+ int getErrorLevel()
	+ size_t getSenderIndex()
	+ size_t getReceiverIndex()
	+ void setSenderIndex()
	+ void setReceiverIndex()
	+ QString getSender()
	+ QString getReceiver()
	+ void setErrorLevel()
	+ size_t getLine()
	+ void setClassEndIndex()
	+ size_t getClassEndIndex()
	+ size_t getMethodLine()
	+ void setMethodLine()
	# size_t class_end_index
	# size_t method_line
	# QString method
	# int error_level
	# RuleID type
	# QString sender
	# size_t sender_index
	# QString receiver
	# size_t receiver_index
	# size_t line
}

class UMLClass{
	x: 288
	y: -96
	in agg with UMLRelation
	in agg with UMLProperty
	+ QString getClassName()
	+ void updateName()
	+ void updateType()
	+ bool isInterface()
	+ size_t pos
	+ size_t pos_end
	+ bool has_changed
	+ std::vector<UMLProperty> getAttributes()
	+ std::vector<UMLProperty> getMethods()
	+ std::vector<UMLProperty> getInheritedAttributes()
	+ std::vector<UMLProperty> getInheritedMethods()
	+ std::vector<UMLRelation>& getRelations()
	+ int getXPos()
	+ int getYPos()
	+ size_t getXLine()
	+ size_t getYLine()
	+ void addProperty()
	+ void addRelation()
	+ bool updatePosition()
	+ void removeExceedingProperties()
	+ void removeExceedingRelations()
	+ void printProperties()
	+ bool updateInherited()
	+ void setErrorFlag()
	+ void cleanAndSetUpdatedInherited()
	+ bool getErrorFlag()
	+ void removePosLines()
	+ void removePos()
	+ void removePosFlags()
	+ bool getDuplicateFlag()
	+ void setDuplicateFlag()
	# bool is_interface
	# bool duplicate
	# bool has_error
	# bool had_error
	# QString class_name
	# std::vector<UMLProperty> attributes
	# std::vector<UMLProperty> methods
	# std::vector<UMLProperty> inheritedAttributes
	# std::vector<UMLProperty> inheritedMethods
	# std::vector<UMLRelation> relations
	# int x
	# int y
	# size_t x_line
	# size_t y_line
	# bool x_set
	# bool y_set
}

class UMLProperty{
	x: 780
	y: 672
	+ size_t pos
	+ QString toString()
	+ bool updateProperty()
	+ QString getMod()
	+ QString getType()
	+ QString getName()
	+ bool getDuplicateFlag()
	+ void setDuplicateFlag()
	# bool duplicate
	# QString p_mod
	# QString p_type
	# QString p_name
}

class UMLRelation{
	x: 780
	y: 348
	+ size_t pos
	+ QString toString()
	+ QString getEntity()
	+ size_t getID()
	+ RuleID getType()
	+ void setInvalid()
	+ bool getValid()
	+ bool updateRelationParams()
	+ bool updateRelationConnectors()
	# bool isValid
	# QString entity
	# RuleID type
	# size_t id
}

interface Service{
	x: -420
	y: -204
	+ T& getInstance()
}

class HistoryService{
	x: -36
	y: 180
	in generalization with Service
	- QTextEdit* code
	+ void setEndpoint()
	+ void takeHistorySnapshot()
	+ void restoreHistorySnapshot()
	- void setCodeWindow()
	- std::vector<QString> history
}

class HighlightService{
	x: -420
	y: 24
	in generalization with Service
	- bool enabled
	+ void setEnabled()
	+ bool getEnabled()
}

class DebugService{
	x: -264
	y: 168
	in generalization with Service
	- DebugTextEdit* debug
	- void setDebug()
	+ void setEndpoint()
	+ void printText()
	+ void clearText()
}

class CodeService{
	x: -732
	y: 156
	in generalization with Service
	- QTextEdit* code
	+ void setEndpoint()
	+ void formatLine()
	+ void updatePos()
	+ void cacheUpdatePos()
	+ void callCachedUpdatePos()
	+ void insertLine()
	+ void setPosActive()
	+ void clearBackground()
	+ void deleteEntity()
	+ void highlightLine()
	+ void relationRequest()
	+ void relationConnect()
	+ void duplicateLine()
	+ void makePublic()
	+ void addEntity()
	+ void setNewClassLine()
	- void setCodeWindow()
	- bool isPosActive
	- size_t new_class_line
	- size_t new_x_line
	- size_t new_y_line
	- int new_x
	- int new_y
	- bool isConnecting
	- size_t rel_line
	- QString sel_name
	- RuleID rule
}

class Analyzer{
	x: -1020
	y: 72
	in comp with SyntaxTree
	+ void Next()
	+ void ClearTo()
	+ void ClearAll()
	+ GlobalStack& GetStack()
	- SyntaxTree* syntax_tree
	- GlobalStack global_stack
	- void getRules()
	- Lexem* matchBody()
	- int matchEnd()
	- void reduceStack()
}

class Highlighter{
	x: -1020
	y: -132
	in comp with Analyzer
	# void highlightBlock()
	- SyntaxTree* syntax_tree
	- Analyzer* analyzer
	- void updateCurrentBlockState()
	- void skipSpace()
}

class SyntaxTree{
	x: -1044
	y: 360
	+ QTextCharFormat err
	+ QTextCharFormat cursor_color
	+ QTextCharFormat after_err
	+ QTextCharFormat no_check
	+ QTextCharFormat posFormat()
	+ QTextCharFormat posValFormat()
	+ RuleSet getRules()
	- RuleSet genRules()
	- RuleSet syntax_tree
}
@enduml